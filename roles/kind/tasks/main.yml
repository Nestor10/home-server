---
# tasks file for podman
- name: include default variables
  ansible.builtin.include_vars: "../vars/main.yml"

- name: include release specific variables
  ansible.builtin.include_vars: "{{ _loop_var }}"
  loop: "{{ query('first_found', _params) }}"
  loop_control:
    loop_var: _loop_var
  vars:
    _params:
      files:
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}.yml"
        - "{{ ansible_os_family | lower }}-{{ ansible_distribution_version | lower }}.yml"
        - "{{ ansible_os_family | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_os_family | lower }}.yml"
      paths:
        - "../vars"
      skip: true


- name: Prechecks
  include_tasks: precheck.yml
  tags:
    - always

- name: Create files based on host-specific variable
  block:
    - name: Check if the variable is defined and is a list
      assert:
        that:
          - "udevRules is defined" # No need for hostvars here
          - "udevRules is iterable"
          - "udevRules is not string"
        fail_msg: "Variable 'my_files' is either not defined, not a list, or a string for host {{ inventory_hostname }}"
      when: udevRules is defined # Simplified condition

    - name: Create directory if it doesn't exist (on target host)
      ansible.builtin.file:
        path: /etc/udev/rules.d
        state: directory
        mode: '0755'

    - name: Create files based on the variable (on target host)
      include_tasks: "udev.yml"
      loop: "{{ udevRules }}" # Use the variable directly
      loop_control:
        label: item.name
      vars:
        file_path: "/etc/udev/rules.d/{{ item.name }}"
        contents: "{{ item.value }}"
      when: udevRules is defined
  rescue:
    - debug:
        msg: "Skipping file creation for host {{ inventory_hostname }} due to errors."

- name: include release specific tasks
  ansible.builtin.include_tasks: "{{ _loop_var }}"
  loop: "{{ query('first_found', _params) }}"
  loop_control:
    loop_var: _loop_var
  vars:
    _params:
      files:
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}.yml"
        - "{{ ansible_os_family | lower }}-{{ ansible_distribution_version | lower }}.yml"
        - "{{ ansible_os_family | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_os_family | lower }}.yml"
      paths:
        - "."
      skip: true

- name: flush handlers
  ansible.builtin.meta: flush_handlers

- name: systemctl start podman.service
  ansible.builtin.service:
    name: "podman.service"
    state: "started"
    enabled: true
  changed_when: false
  failed_when: false